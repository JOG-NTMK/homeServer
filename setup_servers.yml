---
- name: Setup servers with Docker, Docker Compose, and application
  hosts: all
  become: yes

  vars:
    docker_compose_dir: "{{ playbook_dir }}/files/{{ inventory_hostname }}"

  tasks:
    - name: Update and upgrade the system
      apt:
        update_cache: yes
        upgrade: full
        autoremove: true

    - name: Install required packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present

    - name: Add Docker GPG key
      command: >
        curl -fsSL https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg
        | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
      args:
        creates: /usr/share/keyrings/docker-archive-keyring.gpg

    - name: Add Docker repository
      copy:
        dest: /etc/apt/sources.list.d/docker.list
        content: "deb [arch=armhf signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable\n"
      when: ansible_architecture == "armv7l"  # Adjust for Raspberry Pi

    - name: Add Docker repository for PC
      copy:
        dest: /etc/apt/sources.list.d/docker.list
        content: "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable\n"
      when: ansible_architecture == "x86_64"

    - name: Update package index after adding Docker repository
      apt:
        update_cache: yes

    - name: Install Docker and Docker Compose
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: latest

    - name: Ensure Docker service is running
      service:
        name: docker
        state: started
        enabled: yes

    - name: Create application directory
      file:
        path: /opt/app
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Copy Docker Compose file to server
      copy:
        src: "{{ docker_compose_dir }}/docker-compose.yml"
        dest: /opt/app/docker-compose.yml
        owner: root
        group: root
        mode: '0644'

    - name: Copy .env file to server
      copy:
        src: "{{ docker_compose_dir }}/.env"
        dest: /opt/app/.env
        owner: root
        group: root
        mode: '0644'

    - name: Start Docker Compose services
      command:
        cmd: "docker compose up -d"
        chdir: /opt/app
