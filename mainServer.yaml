networks:
  media_network:
    driver: bridge
services:
  jellyfin:
    image: linuxserver/jellyfin
    container_name: jellyfin
    devices:
      - /dev/dri:/dev/dri
    group_add:
      - "44"   # video
      - "107"  # render
    environment:
      TZ: Europe/Dublin
    networks:
      - media_network
    ports:
      - '8096:8096'
    restart: unless-stopped
    volumes:
      - ${DATA_LOCATION}/jellyfin/config:/config
      - ${DATA_LOCATION}/jellyfin/media:/media
      - ${CACHE_LOCATION}/jellyfin/transcodes:/transcodes
  radarr:
    container_name: radarr
    depends_on:
      - sabnzbd
    environment:
      TZ: Europe/Dublin
    image: linuxserver/radarr
    networks:
      - media_network
    ports:
      - '7878:7878'
    restart: unless-stopped
    volumes:
      - ${DATA_LOCATION}/radarr/config:/config
      - ${CACHE_LOCATION}/sabnzbd/downloads:/downloads
      - ${DATA_LOCATION}/jellyfin/media/Movies:/movies
  sabnzbd:
    container_name: sabnzbd
    environment:
      TZ: Europe/Dublin
    image: lscr.io/linuxserver/sabnzbd:latest
    networks:
      - media_network
    ports:
      - '6789:8080'
    restart: unless-stopped
    volumes:
      - ${DATA_LOCATION}/sabnzbd/config:/config
      - ${CACHE_LOCATION}/sabnzbd/downloads:/downloads
      - ${CACHE_LOCATION}/sabnzbd/incomplete:/incomplete-downloads
  sonarr:
    container_name: sonarr
    depends_on:
      - sabnzbd
    environment:
      TZ: Europe/Dublin
    image: linuxserver/sonarr
    networks:
      - media_network
    ports:
      - '8989:8989'
    restart: unless-stopped
    volumes:
      - ${DATA_LOCATION}/sonarr/config:/config
      - ${CACHE_LOCATION}/sabnzbd/downloads:/downloads
      - ${DATA_LOCATION}/jellyfin/media/Shows:/tv
  ombi:
    container_name: ombi
    environment:
      TZ: Europe/Dublin
    image: lscr.io/linuxserver/ombi:latest
    networks:
      - media_network
    ports:
      - '3579:3579'
    restart: unless-stopped
    volumes:
      - ${DATA_LOCATION}/ombi/config:/config
  immich-server:
    container_name: immich_server
    depends_on:
      - redis
      - database
    environment:
      DB_DATABASE_NAME: immich
      DB_HOSTNAME: immich_postgres
      DB_PASSWORD: ${DB_PASSWORD}
      DB_USERNAME: ${DB_USERNAME}
      TZ: Europe/Dublin
      UPLOAD_LOCATION: ${DATA_LOCATION}/immich/
    image: ghcr.io/immich-app/immich-server:release
    networks:
      - media_network
    ports:
      - '2283:2283'
    restart: unless-stopped
    volumes:
      - ${DATA_LOCATION}/immich:/usr/src/app/upload
  immich-machine-learning:
    container_name: immich-machine-learning
    image: ghcr.io/immich-app/immich-machine-learning:release
    networks:
      - media_network
    restart: unless-stopped
    volumes:
      - model-cache:/cache
  redis:
    container_name: immich_redis
    image: redis:6.2-alpine
    networks:
      - media_network
    restart: unless-stopped
  database:
    container_name: immich_postgres
    environment:
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      TZ: Europe/Dublin
    image: tensorchord/pgvecto-rs:pg14-v0.2.0
    networks:
      - media_network
    restart: unless-stopped
    volumes:
      - ${DATA_LOCATION}/immich/pg_database:/var/lib/postgresql/data
volumes:
  model-cache: Null