version: '2'
services:
    jellyfin:
        image: linuxserver/jellyfin
        container_name: jellyfin
        restart: unless-stopped
        deploy:
          resources:
            reservations:
              devices:
                - driver: nvidia
                  count: 1
                  capabilities: [ gpu ]
        environment:
          TZ: Europe/Dublin
          PUID: $UID
          PGID: $GID
        networks:
          - default
        volumes:
          - /mediaServer/jellyfin/config:/config
          - /Media/jellyfin/media:/media
        ports:
          - 8096:8096
    sabnzbd:
      image: lscr.io/linuxserver/sabnzbd:latest
      container_name: sabnzbd
      environment:
        TZ: Europe/Dublin
        PUID: $UID
        PGID: $GID
      volumes:
        - /mediaServer/sabnzbd/config:/config
        - /mediaServer/sabnzbd/downloads:/downloads
        - /mediaServer/sabnzbd/incomplete:/incomplete-downloads
      ports:
        - 6789:8080
      restart: unless-stopped
    sonarr:
        image: linuxserver/sonarr
        container_name: sonarr
        restart: unless-stopped
        environment:
          TZ: Europe/Dublin
          PUID: $UID
          PGID: $GID
        depends_on:
            - sabnzbd
        volumes:
            - /mediaServer/sonarr/config:/config
            - /mediaServer/sabnzbd/downloads:/downloads
            - /Media/jellyfin/media/Shows:/tv
        ports:
            - 8989:8989
    radarr:
        image: linuxserver/radarr
        container_name: radarr
        restart: unless-stopped
        environment:
          TZ: Europe/Dublin
          PUID: $UID
          PGID: $GID
        depends_on:
            - sabnzbd
        volumes:
            - /mediaServer/radarr/config:/config
            - /mediaServer/sabnzbd/downloads:/downloads
            - /Media/jellyfin/media/Movies:/movies
        ports:
            - 7878:7878
    ombi:
      image: lscr.io/linuxserver/ombi:latest
      container_name: ombi
      restart: unless-stopped
      environment:
        TZ: Europe/Dublin
        PUID: $UID
        PGID: $GID
      volumes:
        - /mediaServer/ombi/config:/config
      ports:
        - 3579:3579
    pihole:
        image: pihole/pihole:latest
        container_name: pihole
        restart: unless-stopped
        network_mode: host
        # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
        ports:
          - "53:53/tcp"
          - "53:53/udp"
          - "80:80/tcp"
        environment:
          TZ: Europe/Dublin
          WEBPASSWORD: $PIPASSWORD
          DNSMASQ_LISTENING: local
          PIHOLE_DNS_: 1.1.1.1;1.1.0.0
          WEB_PORT: 8017
        labels:
          - com.centurylinklabs.watchtower.enable = "false"
        # Volumes store your data between container upgrades
        volumes:
          - '/mediaServer/pihole/etc-pihole:/etc/pihole'
          - '/mediaServer/pihole/etc-dnsmasq.d:/etc/dnsmasq.d'
    homeassistant:
      image: linuxserver/homeassistant:latest
      container_name: homeassistant
      restart: unless-stopped
      network_mode: host
      environment:
        PUID: $UID
        PGID: $GID
        TZ: Europe/Dublin
      volumes:
        - /mediaServer/homeassistant/config:/config
      ports:
        - "8123:8123"
      devices:
        - /dev/ttyUSB0:/dev/ttyUSB0
    faster-whisper:
      image: lscr.io/linuxserver/faster-whisper:latest
      container_name: faster-whisper
      environment:
        - PUID=$UID
        - PGID=$GID
        - TZ=Europe/Dublin
        - WHISPER_MODEL=tiny-int8
        - WHISPER_BEAM=1 #optional
        - WHISPER_LANG=en #optional
      volumes:
        - /mediaServer/faster-whisper/config:/config
      ports:
        - 10300:10300
      restart: unless-stopped
    piper:
      image: lscr.io/linuxserver/piper:latest
      container_name: piper
      environment:
        - PUID=$UID
        - PGID=$GID
        - TZ=Europe/Dublin
        - PIPER_VOICE=en_US-lessac-medium
        - PIPER_LENGTH=1.0 #optional
        - PIPER_NOISE=0.667 #optional
        - PIPER_NOISEW=0.333 #optional
        - PIPER_SPEAKER=0 #optional
        - PIPER_PROCS=1 #optional
      volumes:
        - /mediaServer/piper/config:/config
      ports:
        - 10200:10200
      restart: unless-stopped
    nginx-proxy:
      image: 'jc21/nginx-proxy-manager:latest'
      container_name: nginx-proxy
      restart: unless-stopped
      network_mode: host
      ports:
        - '80:80'
        - '81:81'
        - '443:443'
      volumes:
        - /mediaServer/nginx-proxy/data:/data
        - /mediaServer/nginx-proxy/letsencrypt:/etc/letsencrypt
    dashy:
      image: lissy93/dashy
      container_name: dashy
      volumes:
        - /mediaServer/dashy/config/conf.yml:/app/user-data/conf.yml
      ports:
        - "8456:8080"
      environment:
        NODE_ENV: production
        PUID: $UID
        PGID: $GID
        TZ: Europe/Dublin
      restart: unless-stopped
    mosquitto:
      image: eclipse-mosquitto:latest
      container_name: mosquitto
      restart: unless-stopped
      network_mode: host
      environment:
        UID: $UID
        GID: $GID
        TZ: Europe/Dublin
      volumes:
        - /mediaServer/mosquitto/config/:/mosquitto/config/:ro
        - /mediaServer/mosquitto/log/:/mosquitto/log/
        - /mediaServer/mosquitto/data/:/mosquitto/data/
      ports:
        - 1883:1883
        - 9001:9001
    icbinv:
      build: https://github.com/Hypfer/ICantBelieveItsNotValetudo.git
      container_name: "icbinv"
      restart: always
      volumes:
        - /mediaServer/ICantBelieveItsNotValetudo/config.json:/app/config.json
    ollama:
      image: ollama/ollama:latest
      ports:
        - "11434:11434"
      volumes:
        - /mediaServer/ollama:/root/.ollama
      container_name: ollama
      tty: true
      restart: unless-stopped
      deploy:
        resources:
          reservations:
            devices:
              - driver: nvidia
                count: 1
                capabilities: [ gpu ]
    ollama-webui:
      image: ghcr.io/open-webui/open-webui:main
      container_name: ollama-webui
      volumes:
        - /mediaServer/ollama-webui:/app/backend/data
      depends_on:
        - ollama
      ports:
        - "7532:8080"
      environment:
        - '/ollama/api=http://ollama:11434/api'
      extra_hosts:
        - host.docker.internal:host-gateway
      restart: unless-stopped